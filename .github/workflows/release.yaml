name: Release Workflow

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v3

      # Setup JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Project
        run: mvn clean install -DskipTests

        # Run unit tests
      - name: Run unit tests
        run: mvn test --file pom.xml

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # Login to Amazon ECR Public
      - name: Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.ref_name }}
          ECR_REPOSITORY: demo
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

#      - name: Build Docker image
#        run: docker build . -t ${{ github.repository }}:${GITHUB_REF_NAME}
#
#      - name: Login to Amazon ECR
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Push Docker image to Amazon ECR
#        run: |
#          docker tag ${{ github.repository }}:${GITHUB_REF_NAME} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ github.repository }}:${GITHUB_REF_NAME}
#          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ github.repository }}:${GITHUB_REF_NAME}
#
#      - name: Scan for vulnerabilities
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/${{ github.repository }}:${GITHUB_REF_NAME}
#          format: 'table'
#          exit-code: '1'  # Set to "1" to fail the step if vulnerabilities are found
#          ignore-unfixed: true  # Optional: ignore unfixed vulnerabilities
#
#env:
#  AWS_REGION: us-east-1  # Set your AWS region
#  AWS_ACCOUNT_ID: your-aws-account-id  # Set your AWS Account ID
